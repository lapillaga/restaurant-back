name: Deploy App To Develop Environment
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run tests
        run: mvn -B test
  sonar:
    needs: tests
    name: SonarCloud analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Analyze with SonarCloud
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=lapillaga_restaurant-back
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build:
    needs: sonar
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: target/*.jar
          retention-days: 5
  push-docker-image:
    needs: build
    name: Push docker container to Github Container Registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download JAR file
        uses: actions/download-artifact@v2
        with:
          name: artifact
      - name: Login to Github Container Registry
        run: |
          echo $CR_PAT | docker login ghcr.io -u lapillaga --password-stdin
        env:
          CR_PAT: ${{ secrets.CR_PAT }}
      - name: Build and tag docker image
        run: |
          docker build . --tag ghcr.io/$GITHUB_REPOSITORY:$GITHUB_SHA
          docker push ghcr.io/$GITHUB_REPOSITORY:$GITHUB_SHA
  deploy:
    needs: push-docker-image
    name: Deploy to Prod with Git OPS repo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git Ops Repo
        uses: actions/checkout@v2
        with:
          repository: lapillaga/gallon-ops
          token: ${{ secrets.CR_PAT }}
      - name: Apply Kustomize and Push Image Tag
        uses: imranismail/setup-kustomize@v1
      - run: |
          cd argocd/apps/restaurant-backend/develop
          kustomize edit set image ghcr.io/$GITHUB_REPOSITORY:${GITHUB_SHA}
          git add .
          git config --global user.email "devops@elgallonegroec.com"
          git config --global user.name "Github Actions"
          git commit -m "Set new image tag to ${GITHUB_SHA} in DEV"
          git push